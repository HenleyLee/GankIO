apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.liyunlong.gankio"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 3
        versionName "3.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {

        release {
            storeFile file('./gankio.jks')
            storePassword 'gank.io'
            keyAlias 'gank.io'
            keyPassword 'gank.io'
        }

    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            signingConfig signingConfigs.release
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (!variant.buildType.debuggable) {
                output.assemble.doLast {
                    copy {
                        def targetName = "Gank.IO-${variant.versionName}.apk"
                        from output.outputFile
                        into project.rootDir
                        rename { String fileName ->
                            fileName.replace("app-release.apk", targetName)
                        }
                        System.out.println("generate ${targetName} success in dir ${new File(project.rootDir, targetName)}.")
                    }
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Gson(https://github.com/google/gson)
    implementation 'com.google.code.gson:gson:2.8.5'
    // Retrofit(https://github.com/square/retrofit)
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    // Okhttp3(https://github.com/square/okhttp)
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    // Rxjava2(https://github.com/ReactiveX/RxJava)
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'
    // RxAndroid(https://github.com/ReactiveX/RxAndroid)
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    // Glide(https://github.com/bumptech/glide)
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    // PhotoView(https://github.com/chrisbanes/PhotoView)
    implementation 'com.github.chrisbanes:PhotoView:2.1.4'
    // RxPermissions(https://github.com/tbruyelle/RxPermissions)
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    // SmartRefreshLayout(https://github.com/scwang90/SmartRefreshLayout)
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-11'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-11'
    // Logger(https://github.com/orhanobut/logger)
    implementation 'com.orhanobut:logger:2.2.0'

}
